change log
9/16/2010
*changed newport axis config file 
	ex. xaxis.cfg
	_type now __type 
	
9/5/2010
*added section_definition.cfg file to extraction line dir. 
	file defines tests to perform when a valve changes state and how to update the 
	sections state appropriately
	
	[Section-Name]
		components=<comma separated component list>
		test1=<valve name>, <test precedence>,<test string>
		
		ex test string 'closed-static-dynamic'
		
		test would read if <valve name>.state is closed set state to static else 
		set state to dynamic
		
*changes valves.txt 
	first line needs to set the mass spectrometer inlet valve and quad inlet valve
	H,Q
	 
8/31/2010
changed turbos3D.cfg to pumps3D.cfg 
valid sections are Turbo and IonPump
updated turbos3D.cfg in extractionline3D.txt to pumps3D.cfg

added reload scene menu item 
<type>3D.cfg files can now be changed and reloading into pychron. this allows you to
change the scene without having to relaunch program

8/30/2010
*added managers option to initialization config file
	ex. extraction_line_initialization.cfg
	General
		managers=[fusions_diode_manager,]
		devices=...
		
	a <manager_name>_initialization.cfg file must be present
	
changed actuator option to type in valve_controller config file
	General
		type=[arduino_subsystem,]
		
to initialize the valve actuation add valve_manager to the devices list in 
extraction_line_initialization.cfg. 
The type of actuator the valve_manager will use can be specified in parentheses 

	devices=...,
			valve_manager([valve_controller,valve_actuator]),
			...
	
by default a valve_controller type will be used
<type>.cfg needs to be present

the difference btw actuator and controller is that a controller has the concept of auto/locked 
channels whereas a actuator only has concept of open and close


8/29/2010
changed server config file 
	now specify the class of the server TCPServer or UDPServer
	General
		class=[TCPServer,UDPServer]
	Requests
		handler=[None,BaseTCPHandler,StreamTCPHandler,UDPHandler]
8/28/2010
*added type option to server.cfg 
	Requests
		type=[Valve,DiodeLaser]

8/25/2010
syntax note:
	<option> carets indicate optional option
	
	option=[possible,values]
	
*changed canvas3D files in configuration files
generic config
	__class__
		name
		translate
		parent
		<dependencies>
	

8/24/2010
*changed valveactuator config
removed subsystem option
specify in actuator option

	General
		actuator=ArduinoSubsystem
		
*added fiber light control
	FiberLight.cfg
		General
			control_module=ArduinoFiberLightModule or arduino_subsystem
	ArduinoFiberLightModule.cfg
		standard core device config file
			
8/18/2010
*added loadposition to stagecontroller config file
	General
		loadposition=25,25,50 #same order as mapping 
*added ArduinoValveActuator class subclass of ArduinoGPActuator 
	same style config file as ArduinoGPActuator.cfg
	
8/11/2010

added Request section and handler,datasize options to server config file
handler=StreamHandler or BaseHandler
datasize=1024 (applicable only if using BaseHandler)
use a StreamHandler if the senders commands are terminated by a newline character otherwise
use a basehandler and datasize option to set amount of data to be read on each handle request


8/8/2010
added initialize for extraction line manager
fusions initialization.cfg now laser specific
*initialization.cfg==> diode_initialization.cfg
					==>co2_initialization.cfg

*initialization.cfg format change
	General
		devices= <comma sep list>

added  a tcpserver for listening and handling incoming requests
*add server to device list
	server.cfg
		General
			host=localhost
			port=8081		
8/7/2010
added subsystem concept
Agilent and arduino can contain multiple modules. ex actuator, ADC, etc.
* valveactuator.cfg 
	instead of specifying a GPActuator class, you can use a subsystem
	GPActuator option ignored if subsystem specified
	
	specify a subsystem in General
	

*arduino_subsystem.cfg
	specify the enabled modules in General
	modules can be a comma separated list
	
	modules=GPActuator
	
8/6/2010
changed valve actuator into a Device
*update setup file
	valveactuator.cfg
		specify a actuator in General
*add standard coredevice config file  
	ArduinoGPActuactor.cfg
	AgilentGPActuator.cfg
	
